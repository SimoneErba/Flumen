version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"  # React app served via Nginx
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      orientdb:
        condition: service_healthy
    environment:
      - SPRING_APPLICATION_NAME=backend
      - SPRING_PROFILES_ACTIVE=docker
      - ORIENTDB_URL=remote:orientdb/main
      - ORIENTDB_USERNAME=root
      - ORIENTDB_PASSWORD=rootpwd
    networks:
      - app-network

  orientdb:
    image: orientdb:3.2.2
    container_name: orientdb
    environment:
      ORIENTDB_ROOT_PASSWORD: rootpwd
      ORIENTDB_OPTS_MEMORY: "-Xms512m -Xmx512m"
      ORIENTDB_NETWORK_HOST: "0.0.0.0"
    ports:
      - "2424:2424"
      - "2480:2480"  # OrientDB Studio web interface
    volumes:
      - ./docker/orientdb/entrypoint.sh:/orientdb/entrypoint.sh
      - orientdb-data:/orientdb/databases
      - orientdb-config:/orientdb/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2480"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    entrypoint: ["/orientdb/entrypoint.sh"]
    restart: always
    networks:
      - app-network
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse_flumen
    restart: always
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./docker/clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - ./docker/clickhouse/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./docker/clickhouse/init-clickhouse:/docker-entrypoint-initdb.d/
    environment:
      CLICKHOUSE_ALWAYS_RUN_INITDB_SCRIPTS: 1
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: Oncode01
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8124/ping || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  orientdb-data:
  orientdb-config:
  clickhouse-data:
  rabbitmq_data:

